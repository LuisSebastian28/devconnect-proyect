import { SDKConfig, Client } from './types';
export * from './types';
export { SDKError } from './errors';
/**
 * Creates an authenticated SDK client for executing services with optional attestation verification.
 *
 * This is the main entry point for the SDK. The client provides methods to execute services
 * on remote servers with optional cryptographic attestations and data availability posting,
 * as well as standalone attestation verification.
 *
 * @param config - Configuration object containing API key and optional settings
 * @param config.apiKey - Your API key for authentication (required)
 * @param config.baseUrl - Base URL for the API endpoints (optional, defaults to https://console.livylabs.xyz/api/proxy)
 * @param config.timeout - Request timeout in milliseconds (optional, defaults to 30000)
 * @param config.retries - Number of retry attempts for failed requests (optional, defaults to 3)
 *
 * @returns A configured client instance ready to make service execution requests and verify attestations
 *
 * @throws {Error} When API key is missing or invalid
 *
 * @example
 * ```typescript
 * const client = createClient({
 *   apiKey: 'your-api-key-here'
 * });
 * ```
 */
export declare function createClient(config: SDKConfig): Client;
declare const _default: {
    createClient: typeof createClient;
};
export default _default;
