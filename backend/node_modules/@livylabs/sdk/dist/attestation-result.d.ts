import { AttestationResult, ExecutionResponseData, DataAvailabilityResult } from './types';
/**
 * Implementation of AttestationResult that provides cryptographic verification capabilities.
 *
 * This class wraps the raw execution response data from the Livy proxy and provides methods to verify
 * the cryptographic integrity of the attestation (if present) using the included quote data.
 */
export declare class AttestationResultImpl implements AttestationResult {
    /** Status of the execution */
    readonly status: string;
    /** The output from the service execution */
    readonly output: any;
    /** Cryptographic attestation quote and related data (only present if withAttestation was true) */
    readonly quote?: {
        /** Base64-encoded attestation quote */
        quote: string;
        /** Event log entries */
        eventLog: string;
        /** Runtime Measurement Registers (RTMRs) */
        rtmrs: string[];
    };
    /** The service that was executed */
    readonly serviceId: string;
    /** Parameters that were passed to the service */
    readonly params: Record<string, any>;
    /** Whether attestation was generated for this execution */
    readonly withAttestation: boolean;
    /** Whether execution data was posted to data availability layer */
    readonly postedToDataAvailability: boolean;
    /** Data availability posting result (only present if postToDataAvailability was true) */
    readonly dataAvailabilityResult?: DataAvailabilityResult;
    /** Base URL for making verification requests */
    private readonly baseUrl;
    /**
     * Creates a new AttestationResult from raw response data.
     *
     * @param data - Raw execution response data from the proxy API
     * @param serviceId - The service ID that was executed
     * @param params - The parameters that were passed
     * @param withAttestation - Whether attestation was requested
     * @param postedToDataAvailability - Whether data was posted to DA layer
     * @param baseUrl - Base URL for making verification requests
     * @param dataAvailabilityResult - Result from DA posting (if any)
     */
    constructor(data: ExecutionResponseData, serviceId: string, params: Record<string, any>, withAttestation: boolean, postedToDataAvailability: boolean, baseUrl: string, dataAvailabilityResult?: DataAvailabilityResult);
    /**
     * Verifies the cryptographic integrity of the attestation.
     *
     * This method sends the attestation quote data to the Livy console verification endpoint
     * which performs the actual cryptographic verification using proper attestation services.
     *
     * @returns Promise that resolves to true if the attestation is valid, false otherwise
     * @throws {SDKError} When the verification process encounters an error
     *
     * @example
     * ```typescript
     * const result = await client.run({...});
     * const isValid = await result.verifyAttestation();
     * if (isValid) {
     *   console.log('Attestation is cryptographically valid');
     * }
     * ```
     */
    verifyAttestation(): Promise<boolean>;
}
